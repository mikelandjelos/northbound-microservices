networks:
  est-bridge:
    name: est_bridge

secrets:
  influx-token:
    file: ./secrets/influx_token

services:
  # ---------------------------------------------------------------------------------------------------------
  # MOCK DATA PROVIDER SERVICE - INFLUXDB2
  # ---------------------------------------------------------------------------------------------------------

  influx-mock:
    image: influxdb:2
    container_name: influx-mock
    ports:
      - "${INFLUXDB_MOCK_PORT}:8086"
    volumes:
      - ${INFLUXDB_MOCK_ROOT}/influxdb2-data:/var/lib/influxdb2
      - ${INFLUXDB_MOCK_ROOT}/influxdb2-config:/etc/influxdb2
      - ${INFLUXDB_MOCK_ROOT}/environmental_sensor_telemetry_data.csv:/environmental_sensor_telemetry_data.csv
      - ${INFLUXDB_MOCK_ROOT}/scripts:/docker-entrypoint-initdb.d
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_RETENTION=0
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE=${INFLUXDB_TOKEN_FILE}
    networks:
      - est-bridge
    secrets:
      - influx-token

  # ---------------------------------------------------------------------------------------------------------
  # MESSAGE BROKER SERVICE - ECLIPSE MOSQUITTO
  # ---------------------------------------------------------------------------------------------------------

  mqtt-broker:
    image: eclipse-mosquitto:2
    container_name: mqtt-broker
    volumes:
      - ${MOSQUITTO_ROOT}/config:/mosquitto/config:ro
    ports:
      - "1883:1883" # MQTT
      - "9001:9001" # WebSockets
    stdin_open: true
    tty: true
    networks:
      - est-bridge

  # ---------------------------------------------------------------------------------------------------------
  # MOCK SENSOR SERVICES - PYTHON
  # ---------------------------------------------------------------------------------------------------------

  first-sensor:
    image: est-sensor
    container_name: first-sensor
    environment:
      - INFLUXDB_URL=${INFLUXDB_MOCK_URL}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - DEVICE_MAC_ADDR=${FIRST_SENSOR_MAC_ADDR}
      - MQTT_BROKER_HOST=${MOSQUITTO_HOST}
      - MQTT_BROKER_PORT=${MOSQUITTO_PORT}
    depends_on:
      - mqtt-broker
      - influx-mock
    networks:
      - est-bridge
    secrets:
      - influx-token
    deploy:
      restart_policy:
        condition: on-failure
        delay: 1s
        max_attempts: 5

  second-sensor:
    image: est-sensor
    container_name: second-sensor
    environment:
      - INFLUXDB_URL=${INFLUXDB_MOCK_URL}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - DEVICE_MAC_ADDR=${SECOND_SENSOR_MAC_ADDR}
      - MQTT_BROKER_HOST=${MOSQUITTO_HOST}
      - MQTT_BROKER_PORT=${MOSQUITTO_PORT}
    depends_on:
      - mqtt-broker
      - influx-mock
    networks:
      - est-bridge
    secrets:
      - influx-token
    deploy:
      restart_policy:
        condition: on-failure
        delay: 1s
        max_attempts: 5

  third-sensor:
    image: est-sensor
    container_name: third-sensor
    environment:
      - INFLUXDB_URL=${INFLUXDB_MOCK_URL}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - DEVICE_MAC_ADDR=${THIRD_SENSOR_MAC_ADDR}
      - MQTT_BROKER_HOST=${MOSQUITTO_HOST}
      - MQTT_BROKER_PORT=${MOSQUITTO_PORT}
    depends_on:
      - mqtt-broker
      - influx-mock
    networks:
      - est-bridge
    secrets:
      - influx-token
    deploy:
      restart_policy:
        condition: on-failure
        delay: 1s
        max_attempts: 5

  # ---------------------------------------------------------------------------------------------------------
  # NATS SERVER
  # ---------------------------------------------------------------------------------------------------------

  nats-server:
    image: nats
    container_name: nats-server
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["--http_port", "8222"]
    networks:
      - est-bridge

  # ---------------------------------------------------------------------------------------------------------
  # FILTER SERVICE - NODEJS
  # ---------------------------------------------------------------------------------------------------------

  filter:
    image: est-filter
    container_name: filter
    environment:
      - MQTT_BROKER_HOST=${MOSQUITTO_HOST}
      - MQTT_BROKER_PORT=${MOSQUITTO_PORT}
      - WINDOW_SIZE=100
      - NATS_HOST=${NATS_HOST}
      - NATS_PORT=${NATS_PORT}
    depends_on:
      - mqtt-broker
      - nats-server
    networks:
      - est-bridge
    deploy:
      restart_policy:
        condition: on-failure
        delay: 1s
        max_attempts: 5

  # ---------------------------------------------------------------------------------------------------------
  # TIMESERIES DATABASE - INFLUXDB2
  # ---------------------------------------------------------------------------------------------------------

  influx-statistics:
    image: influxdb:2
    container_name: influx-statistics
    ports:
      - "${INFLUXDB_STATISTICS_PORT}:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_RETENTION=0
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE=${INFLUXDB_TOKEN_FILE}
    networks:
      - est-bridge
    secrets:
      - influx-token

  # ---------------------------------------------------------------------------------------------------------
  # DASHBOARD SERVICE - JAVA
  # ---------------------------------------------------------------------------------------------------------

  dashboard:
    image: est-dashboard
    container_name: dashboard
    environment:
      - NATS_URI=nats://${NATS_HOST}:${NATS_PORT}
      - INFLUXDB_URL=${INFLUXDB_STATISTICS_URL}
      - INFLUXDB_TOKEN_FILE=${INFLUXDB_TOKEN_FILE}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
    depends_on:
      - filter
      - nats-server
      - influx-statistics
    networks:
      - est-bridge
    secrets:
      - influx-token
    deploy:
      restart_policy:
        condition: on-failure
        delay: 1s
        max_attempts: 5

  # ---------------------------------------------------------------------------------------------------------
  # DASHBOARD SERVICE - JAVA
  # ---------------------------------------------------------------------------------------------------------

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    volumes:
      - ./grafana/config/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./grafana/provisioning:/etc/grafana/provisioning/
    environment:
      - INFLUXDB_URL=${INFLUXDB_STATISTICS_URL}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - GF_INFLUXDB_TOKEN__FILE=${INFLUXDB_TOKEN_FILE}
      - GF_LOG_LEVEL=debug
    networks:
      - est-bridge
    secrets:
      - influx-token
    depends_on:
      - influx-statistics
